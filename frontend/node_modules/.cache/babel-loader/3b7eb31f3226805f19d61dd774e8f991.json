{"ast":null,"code":"import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState(_ref, props, context, presenceContext) {\n  let {\n    scrapeMotionValuesFromProps,\n    createRenderState,\n    onMount\n  } = _ref;\n  const state = {\n    latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n    renderState: createRenderState()\n  };\n\n  if (onMount) {\n    state.mount = instance => onMount(props, instance, state);\n  }\n\n  return state;\n}\n\nconst makeUseVisualState = config => (props, isStatic) => {\n  const context = useContext(MotionContext);\n  const presenceContext = useContext(PresenceContext);\n\n  const make = () => makeState(config, props, context, presenceContext);\n\n  return isStatic ? make() : useConstant(make);\n};\n\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n  const values = {};\n  const motionValues = scrapeMotionValues(props);\n\n  for (const key in motionValues) {\n    values[key] = resolveMotionValue(motionValues[key]);\n  }\n\n  let {\n    initial,\n    animate\n  } = props;\n  const isControllingVariants$1 = isControllingVariants(props);\n  const isVariantNode$1 = isVariantNode(props);\n\n  if (context && isVariantNode$1 && !isControllingVariants$1 && props.inherit !== false) {\n    if (initial === undefined) initial = context.initial;\n    if (animate === undefined) animate = context.animate;\n  }\n\n  let isInitialAnimationBlocked = presenceContext ? presenceContext.initial === false : false;\n  isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n  const variantToSet = isInitialAnimationBlocked ? animate : initial;\n\n  if (variantToSet && typeof variantToSet !== \"boolean\" && !isAnimationControls(variantToSet)) {\n    const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n    list.forEach(definition => {\n      const resolved = resolveVariantFromProps(props, definition);\n      if (!resolved) return;\n      const {\n        transitionEnd,\n        transition,\n        ...target\n      } = resolved;\n\n      for (const key in target) {\n        let valueTarget = target[key];\n\n        if (Array.isArray(valueTarget)) {\n          /**\n           * Take final keyframe if the initial animation is blocked because\n           * we want to initialise at the end of that blocked animation.\n           */\n          const index = isInitialAnimationBlocked ? valueTarget.length - 1 : 0;\n          valueTarget = valueTarget[index];\n        }\n\n        if (valueTarget !== null) {\n          values[key] = valueTarget;\n        }\n      }\n\n      for (const key in transitionEnd) values[key] = transitionEnd[key];\n    });\n  }\n\n  return values;\n}\n\nexport { makeUseVisualState };","map":{"version":3,"names":["useContext","isAnimationControls","PresenceContext","resolveVariantFromProps","useConstant","resolveMotionValue","MotionContext","isControllingVariants","isVariantNode","makeState","props","context","presenceContext","scrapeMotionValuesFromProps","createRenderState","onMount","state","latestValues","makeLatestValues","renderState","mount","instance","makeUseVisualState","config","isStatic","make","scrapeMotionValues","values","motionValues","key","initial","animate","isControllingVariants$1","isVariantNode$1","inherit","undefined","isInitialAnimationBlocked","variantToSet","list","Array","isArray","forEach","definition","resolved","transitionEnd","transition","target","valueTarget","index","length"],"sources":["/Users/elizabethptack/Desktop/UWM/msp2/goalMates/frontend/node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs"],"sourcesContent":["import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props);\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}